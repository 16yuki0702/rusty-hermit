stages:
- prepare
- build
- test
- deploy

variables:
  DOCKER_FILE: Dockerfile
  DOCKER_TAG: latest
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}
  GIT_SUBMODULE_STRATEGY: normal


.prepare:docker: &prepare_docker
  stage: prepare
  image:
    name: quay.io/buildah/stable
  variables:
    _BUILDAH_STARTED_IN_USERNS: ""
    BUILDAH_ISOLATION: chroot
    BUILDAH_LAYERS: "true"
  before_script:
  - buildah version
  - buildah login --username "${CI_REGISTRY_USER}" --password "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
  script:
  - buildah bud -f ${DOCKER_FILE} -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
  - buildah push ${DOCKER_IMAGE}:${DOCKER_TAG} docker://${DOCKER_IMAGE}:${DOCKER_TAG}
  after_script:
  - buildah logout "${CI_REGISTRY}"
  tags:
  - builder

prepare:docker:
  <<: *prepare_docker

build:demo:
  stage: build
  image: ${CI_REGISTRY_IMAGE}
  script:
    - cargo build -p rusty_demo
    - RUSTFLAGS="-Clinker-plugin-lto" cargo build -p rusty_demo --release
  cache:
    paths:
      - /root/.cargo
    key: cargo-cache
  artifacts:
    paths:
      - target/x86_64-unknown-hermit/debug/rusty_demo
      - target/x86_64-unknown-hermit/release/rusty_demo

build:httpd:
  stage: build
  image: ${CI_REGISTRY_IMAGE}
  script:
    - RUSTFLAGS="-Clinker-plugin-lto" cargo build -p httpd --release
  cache:
    paths:
      - /root/.cargo
    key: cargo-cache
    policy: pull
  artifacts:
    paths:
      - target/x86_64-unknown-hermit/release/httpd

test:uhyve:
   stage: test
   dependencies:
     - build:demo
   image: ${CI_REGISTRY_IMAGE}
   script:
     - lscpu
     - kvm-ok
     - uhyve -v -c 1 target/x86_64-unknown-hermit/debug/rusty_demo
     - uhyve -v -c 2 target/x86_64-unknown-hermit/debug/rusty_demo
     - uhyve -v -c 1 target/x86_64-unknown-hermit/release/rusty_demo
     - uhyve -v -c 2 target/x86_64-unknown-hermit/release/rusty_demo
   tags:
     - privileged
   cache:
     key: cargo-cache
     paths:
        - /root/.cargo
     policy: pull

test:qemu:
   stage: test
   dependencies:
     - build:demo
   image: ${CI_REGISTRY_IMAGE}
   script:
     - lscpu
     - kvm-ok
     - cd loader
     - make
     - make release=1
     - cd ..
     - qemu-system-x86_64 -display none -smp 1 -m 64M -serial stdio -kernel loader/target/x86_64-unknown-hermit-loader/debug/rusty-loader -initrd target/x86_64-unknown-hermit/debug/rusty_demo -cpu host -enable-kvm
     - qemu-system-x86_64 -display none -smp 2 -m 64M -serial stdio -kernel loader/target/x86_64-unknown-hermit-loader/debug/rusty-loader -initrd target/x86_64-unknown-hermit/debug/rusty_demo -cpu host -enable-kvm
     - qemu-system-x86_64 -display none -smp 1 -m 64M -serial stdio -kernel loader/target/x86_64-unknown-hermit-loader/release/rusty-loader -initrd target/x86_64-unknown-hermit/release/rusty_demo -cpu host -enable-kvm
     - qemu-system-x86_64 -display none -smp 2 -m 64M -serial stdio -kernel loader/target/x86_64-unknown-hermit-loader/release/rusty-loader -initrd target/x86_64-unknown-hermit/release/rusty_demo -cpu host -enable-kvm
   tags:
     - privileged
   cache:
     key: cargo-cache
     paths:
        - /root/.cargo
     policy: pull

test:image:
   stage: test
   dependencies:
     - build:httpd
   image: ${CI_REGISTRY_IMAGE}
   script:
     - cd loader
     - make release=1
     - cd ..
     - qemu-img create -f qcow2 disk.qcow2 1G
     - qemu-nbd -c /dev/nbd0 -f qcow2 disk.qcow2
     - echo ';' | sfdisk /dev/nbd0
     - mknod /dev/nbd0p1 b 43 1
     - mkfs.ext2 /dev/nbd0p1
     - mount /dev/nbd0p1 /mnt/
     - grub-install --verbose --recheck --root-directory=/mnt --no-floppy --modules="normal part_msdos ext2 multiboot biosdisk" /dev/nbd0
     - cp target/x86_64-unknown-hermit/release/httpd /mnt/boot/
     - cp loader/target/x86_64-unknown-hermit/release/rusty_loader /mnt/boot
     - |
       cat > /mnt/boot/grub.cfg << EOF
       default=0
       timeout=0
       menuentry "httpd" {
         multiboot /boot/rusty_loader -uart=io:0x3f8
         module /boot/httpd
         boot
       }
       EOF
     - umount /mnt
     - qemu-nbd -d /dev/nbd0
   tags:
     - privileged
   artifacts:
    paths:
      - disk.qcow2
   cache:
     key: cargo-cache
     paths:
        - /root/.cargo
     policy: pull
  only:
    refs:
      - master

deploy:image:
  stage: deploy
  dependencies:
    - test:image
  variables:
    KUBECONFIG: /root/.kube/config
  environment:
    name: production
  image: registry.git.rwth-aachen.de/acs/internal/cloud/kubernetes/deployment:2
  before_script:
    - mkdir -p $(dirname ${KUBECONFIG})
    - echo "${KUBECONFIG_ENCODED}" | base64 -d > ${KUBECONFIG}
    - kubectl cluster-info
    - kubectl version
    - helm version
  script:
    - echo -n "Hello"
  cache: {}
  only:
    refs:
      - master
